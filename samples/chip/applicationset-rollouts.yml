apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: chip
  namespace: argocd
spec:
  generators:
    - list:
        elements:
          - cluster: https://kubernetes.default.svc
  template:
    metadata:
      name: chip
    spec:
      project: "default"
      source:
        repoURL: 'http://chartmuseum.chartmuseum.svc.cluster.local:8080'
        chart: sample
        targetRevision: 0.1.0
        helm:
          releaseName: chip
          valuesObject:
            app:
              name: chip
              image: fidelissauro/chip:v1
              namespace: chip
              iam: ""
              capacity:
                requests: 
                  cpu: 100m
                  memory: 128Mi
                limits: 
                  cpu: 200m
                  memory: 256Mi
                autoscaling: {}
                min: 1
                max: 10
              rollout:
                strategy:
                  canary:
                    steps:
                    # - setWeight: 20
                    # - pause: { duration: 10 }
                    # - setWeight: 40
                    # - pause: { duration: 10 }
                    # - setWeight: 60
                    # - pause: { duration: 10 }
                    # - setWeight: 80
                    # - pause: { duration: 10 }
                    - setWeight: 100
              envs:
                - name: VERSION
                  value: "v1"

              port:
                name: web
                port: 8080
                protocol: TCP
                targetPort: 8080
              service:
                type: ClusterIP
              istio:
                gateway: 
                  selector: ingressgateway
                  # HTTP, HTTP2, GRPC, GRPC-WEB, MONGO, REDIS, MYSQL, TCP
                  protocol: HTTP 
                  port: 8080
                host: chip.k8s.raj.ninja
                virtualService:
                  http:
                    enabled: true
                    retries:
                      attempts: 1
                      perTryTimeout: 500ms
                      retryOn: refused-stream
                DestinationRule:
                  enabled: true

              prometheus:
                scrape: "true"
                port: 8080
                path: /metrics

              probes:
                livenessProbe:
                  enabled: true
                  failureThreshold: 10
                  periodSeconds: 10
                  httpGet:
                    path: /healthcheck
                    port: 8080
                startupProbe:
                  enabled: true
                  failureThreshold: 10
                  periodSeconds: 10
                  httpGet:
                    path: /healthcheck
                    port: 8080

      destination:
        server: '{{ cluster }}'
        namespace: argocd
      syncPolicy:
        automated: {}
